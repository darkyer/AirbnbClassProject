scalar EmailAddress
scalar URL
scalar Upload
directive @auth on FIELD_DEFINITION | FIELD

type Query {
    getUsers:[User]!
    getSingleUser(id:ID!):User!
    getProperties:[Property]!
    getOneProperty(id:ID!):Property!
    me:User!@auth
}

type Mutation{
    createNewUser(data:UserInput!):User!
    updateOneUser(id:ID!,data:UserUpdateInput!):User!@auth
    deleteOneUser(id:ID!):String!@auth
    createNewProperty(data:PropertyInput!):Property!@auth
    updateOneProperty(id:ID!,data:PropertyUpdateInput!):Property!@auth
    deleteOneProperty(id:ID!):String!@auth
    login(email:EmailAddress!,password:String):Auth!
}

type Auth{
    token:String!
    message:String!
}

type Property{
    _id:ID!
    title:String!
    direction:String!
    descrption:String!
    cover:URL  
    user:User! #Aqui regresa todo el objeto
}

input PropertyInput {
    title:String!
    direction:String!
    description:String!
    #author:String! #Aqui solo va el ID
    cover:Upload
}

input PropertyUpdateInput{
    title:String
    direction:String
    description:String
    cover:Upload
    liked_by:String
    is_active:Boolean
}

type User{
    _id:ID!
    first_name:String!
    last_name:String!
    email:EmailAddress!
    birth_date:String!
    gender:GENDERS
    profile_pic:URL!
    properties:[Property]!
}

input UserInput {
    first_name:String!
    last_name:String!
    email:EmailAddress!
    password:String!
    birth_date:String
    gender:GENDERS
    profile_pic:String
}

input UserUpdateInput {
    first_name:String
    last_name:String
    email:EmailAddress
    password:String
    birth_date:String
    gender:GENDERS
    profile_pic:String
    is_active:Boolean
}

enum GENDERS {
    M
    F
    O
}
